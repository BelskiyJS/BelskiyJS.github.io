'use strict'; let masDivNum = [[], [], [], [], [], [], [], [], []]; const znakImage = { "+": "img/plus.svg", "-": "img/minus.svg", "*": "img/umn.svg", "/": "img/delit.svg" }; let selectedTd; function addElemBoxMath() { let a = document.querySelector(".box-math"); for (let b = 0; 9 > b; b++)for (let c, d = 0; 9 > d; d++)c = document.createElement("div"), c.classList.add("item-box-math"), 0 == b % 2 && 0 == b % 2 && c.setAttribute("data-edit", 0), 0 < b && 0 < d && 0 != b % 2 && 0 != d % 2 && c.classList.add("not_data"), (0 == b % 2 && (3 == d || 7 == d) || 0 == d % 2 && (3 == b || 7 == b)) && (c.innerHTML = "<img src=\"img/ravno.svg\" alt=\"=\" height=\"50%\" width=\"50%\">"), masDivNum[b][d] = c, a.append(c) } function addElemBoxSetup() { let a, b, c = document.querySelector(".box-setup-button"); a = document.createElement("div"), a.classList.add("item-box-setup-button"), a.classList.add("item-box-setup-button-new"), a.onclick = () => NewData(-1, !0), b = document.createElement("div"), b.classList.add("item-box-setup-button-img"), b.innerHTML = `<img src="img/but_new.svg" alt=" " height="100%" width="100%">`, a.append(b), b = document.createElement("div"), b.classList.add("item-box-setup-button-content"), b.textContent = "\u041D\u043E\u0432\u044B\u0439", a.append(b), c.append(a), a = document.createElement("div"), a.classList.add("item-box-setup-button"), a.classList.add("item-box-setup-button-hint"), b = document.createElement("div"), b.classList.add("item-box-setup-button-img"), b.innerHTML = `<img src="img/but_hint.svg" alt=" " height="100%" width="100%">`, a.append(b), b = document.createElement("div"), b.classList.add("item-box-setup-button-content"), b.textContent = "\u041F\u043E\u0434\u0441\u043A\u0430\u0437\u043A\u0430", a.append(b), c.append(a), a = document.createElement("div"), a.classList.add("item-box-setup-button"), a.classList.add("item-box-setup-button-newpm"), a.onclick = () => NewData(-1, !1), b = document.createElement("div"), b.classList.add("item-box-setup-button-img"), b.innerHTML = `<img src="img/but_newpm.svg" alt=" " height="100%" width="100%">`, a.append(b), b = document.createElement("div"), b.classList.add("item-box-setup-button-content"), b.textContent = "\u041D\u043E\u0432\u044B\u0439", a.append(b), c.append(a), a = document.createElement("div"), a.classList.add("item-box-setup-button"), a.classList.add("item-box-setup-button-prov"), b = document.createElement("div"), b.classList.add("item-box-setup-button-img"), b.innerHTML = `<img src="img/but_prov.svg" alt=" " height="100%" width="100%">`, a.append(b), b = document.createElement("div"), b.classList.add("item-box-setup-button-content"), b.textContent = "\u041F\u0440\u043E\u0432\u0435\u0440\u043A\u0430", a.append(b), c.append(a); let d = document.querySelector(".box-setup-keyboard"); for (let b = 1; 50 > b; b++)a = document.createElement("div"), a.classList.add("item-box-setup-keyboard"), a.textContent = 2 * b, d.append(a); a = document.createElement("div"), a.classList.add("item-box-setup-keyboard"), a.textContent = "", d.append(a) } function NewData(a, b) { newMathMat(b); for (let c = 0; 4 >= c; c++)masDivNum[2 * c][1].innerHTML = `<img src="${znakImage[masItogNum[2 * c][1]]}" alt="${masItogNum[2 * c][1]}" height="50%" width="50%">`, masDivNum[2 * c][5].innerHTML = `<img src="${znakImage[masItogNum[2 * c][5]]}" alt="${masItogNum[2 * c][5]}" height="50%" width="50%">`, masDivNum[1][2 * c].innerHTML = `<img src="${znakImage[masItogNum[1][2 * c]]}" alt="${masItogNum[1][2 * c]}" height="50%" width="50%">`, masDivNum[5][2 * c].innerHTML = `<img src="${znakImage[masItogNum[5][2 * c]]}" alt="${masItogNum[5][2 * c]}" height="50%" width="50%">`; -1 == a && (a = randomInteger(0, masVariant.length)); for (let c = 0; 4 >= c; c++)for (let b = 0; 4 >= b; b++)masDivNum[2 * c][2 * b].textContent = "", masDivNum[2 * c][2 * b].setAttribute("data-edit", masVariant[a][c][b]), "0" == masVariant[a][c][b] && (masDivNum[2 * c][2 * b].textContent = masItogNum[2 * c][2 * b]); selectedTd && (selectedTd.classList.remove("select_td"), selectedTd = null), document.querySelector(".box-math").addEventListener("click", clickDivEditData), document.querySelector(".box-setup-keyboard").addEventListener("click", clickDivKeyboard), document.querySelector(".item-box-setup-button-prov").addEventListener("click", clickDivProverka), document.querySelector(".item-box-setup-button-hint").addEventListener("click", clickDivHint); let c = document.querySelector(".item-box-setup-button-prov"); c.addEventListener("click", clickDivProverka), c.classList.contains("item-box-setup-button-new-prov-border") && (c.classList.remove("item-box-setup-button-new-prov-border"), c.querySelector(".item-box-setup-button-content").textContent = "\u041F\u0440\u043E\u0432\u0435\u0440\u043A\u0430", c.querySelector(".item-box-setup-button-img").innerHTML = `<img src="img/but_prov.svg" alt=" " height="100%" width="100%">`) } function clickDivEditData(a) { let b = a.target; if ("DIV" != b.tagName) return; if (1 != b.getAttribute("data-edit")) return; if (selectedTd && selectedTd.classList.remove("select_td"), selectedTd = b, selectedTd.classList.add("select_td"), isMobile) return; let c = document.createElement("input"); c.value = b.textContent, c.type = "text", c.maxLength = "2", c.setAttribute("onkeypress", "return event.charCode >= 48 && event.charCode <= 57"), c.setAttribute("oncontextmenu", "return false"), c.setAttribute("onpaste", "return false"), c.style.width = "85%", c.style.height = "85%", c.style.borderRadius = "inherit", c.onblur = function () { b.textContent = this.value, c.remove() }, c.onkeydown = function (a) { "Enter" == a.key && this.blur() }, b.textContent = "", b.append(c), c.focus() } function clickDivKeyboard(a) { let b = a.target; "DIV" == b.tagName && selectedTd && "item-box-setup-keyboard" == b.className && (selectedTd.textContent = b.textContent, document.querySelector(".box-setup-keyboard").removeEventListener("click", clickDivKeyboard), b.classList.add("click-keyboard"), setTimeout(() => { b.classList.remove("click-keyboard"), document.querySelector(".box-setup-keyboard").addEventListener("click", clickDivKeyboard) }, 100)) } function clickDivProverka() { selectedTd && (selectedTd.classList.remove("select_td"), selectedTd = null), document.querySelector(".box-math").removeEventListener("click", clickDivEditData), document.querySelector(".box-setup-keyboard").removeEventListener("click", clickDivKeyboard), document.querySelector(".item-box-setup-button-hint").removeEventListener("click", clickDivHint); let a = document.querySelector(".item-box-setup-button-prov"); a.removeEventListener("click", clickDivProverka), a.classList.contains("item-box-setup-button-new-prov-border") || a.classList.add("item-box-setup-button-new-prov-border"); let b = !0; for (let a = 0; 4 >= a; a++)for (let c, d = 0; 4 >= d; d++) { if (c = masDivNum[2 * a][2 * d], "4" == c.getAttribute("data-edit")) continue; c.setAttribute("data-edit", "2"); let e = c.textContent, f = masItogNum[2 * a][2 * d]; if (e != f) { b = !1, "" === e && (e = "?"), c.textContent = ""; let a = document.createElement("div"); a.classList.add("box-prov"); let d = document.createElement("div"); d.classList.add("div_ok_edit"), d.textContent = f, d.style.justifyContent = "flex-end", d.style.paddingRight = "2px", a.append(d); let g = document.createElement("div"); g.classList.add("div_ok_edit"), g.textContent = e, g.style.justifyContent = "right", g.style.paddingLeft = "2px", g.style.color = "rgb(222 59 59 / 95%)", a.append(g), c.append(a) } } b ? (a.querySelector(".item-box-setup-button-content").textContent = "\u041F\u0440\u0430\u0432\u0438\u043B\u044C\u043D\u043E", a.querySelector(".item-box-setup-button-img").innerHTML = `<img src="img/but_prov_ok.svg" alt=" " height="100%" width="100%">`) : (a.querySelector(".item-box-setup-button-content").textContent = "\u041D\u0435\u043F\u0440\u0430\u0432\u0438\u043B\u044C\u043D\u043E", a.querySelector(".item-box-setup-button-img").innerHTML = `<img src="img/but_prov_bad.svg" alt=" " height="100%" width="100%">`) } function clickDivHint() { if (selectedTd) { for (let a = 0; 4 >= a; a++)for (let b = 0; 4 >= b; b++)if (masDivNum[2 * a][2 * b] == selectedTd) { masDivNum[2 * a][2 * b].textContent = masItogNum[2 * a][2 * b]; break } selectedTd.setAttribute("data-edit", "4"), selectedTd.classList.remove("select_td"), selectedTd = null } }